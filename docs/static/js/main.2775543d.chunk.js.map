{"version":3,"sources":["components/Landing.js","components/Game.js","components/Rules.js","components/Pieces.js","components/Footer.js","components/App.js","index.js"],"names":["Landing","className","to","type","value","Game","Rules","Pieces","Footer","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"iQAmBeA,EAjBC,WACd,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAASC,GAAG,QAAZ,SACE,uBAAOC,KAAK,SAASC,MAAM,mBAE7B,cAAC,IAAD,CAASF,GAAG,SAAZ,SACE,uBAAOC,KAAK,SAASC,MAAM,mBAE7B,cAAC,IAAD,CAASF,GAAG,OAAZ,SACE,uBAAOC,KAAK,SAASC,MAAM,2BCVtBC,EAHF,WACX,OAAO,6CC0BMC,EA3BD,WACZ,OACE,qCACG,IADH,whDCOWC,EATA,WACb,OACE,yTCEWC,G,MAHA,WACb,OAAO,wBAAQP,UAAU,SAAlB,uCCuBMQ,EAdH,WACV,OACE,sBAAKR,UAAU,OAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,EAAD,QCbNC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2775543d.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport '../styles/layout/landing.scss';\r\nconst Landing = () => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='container__links'>\r\n        <NavLink to='rules'>\r\n          <input type='button' value='Reglas juego' />\r\n        </NavLink>\r\n        <NavLink to='pieces'>\r\n          <input type='button' value='Piezas juego' />\r\n        </NavLink>\r\n        <NavLink to='game'>\r\n          <input type='button' value='Comenzar juego' />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Landing;\r\n","const Game = () => {\r\n  return <>Game</>;\r\n};\r\nexport default Game;\r\n","const Rules = () => {\r\n  return (\r\n    <>\r\n      {' '}\r\n      El juego es muy sencillo. Dispondremos de 6 casillas que representan un\r\n      camino en la zona de carga de la Razor Crest que lleva hasta el armario\r\n      donde se encuentra segura la mercancía. De este modo tendremos 7 casillas,\r\n      6 del camino y una que representa al armario: 🔲🔲🔲🔲🔲🔲❎ Durante el\r\n      viaje has hecho muy bien tu trabajo pero ahora debes vaciar el armario.\r\n      Para ello deberás descargar la mercancía poco a poco. Este es el momento\r\n      más delicado ya que Grogu puede aprovechar y llegar hasta el armario. Si\r\n      eso ocurre se comerá lo que encuentre y Mando perderá la oportunidad de\r\n      saber dónde esta Ahsoka. Ergo, te has quedado sin recompensa. Además de\r\n      esas 7 piezas tendrás tres recipientes donde se guarda cada tipo de\r\n      mercancía. De esta manera quedaría:Recipiente de las galletas: Tendrá 3\r\n      cajas de galletas azules dentro Recipiente de los huevos de rana: Tendrá\r\n      dentro 3 huevos de rana (sin fertilizar) Recipiente de las ranas: Tendrá\r\n      dentro 3 ranas Además de estas piezas tendremos un dado de 5 caras donde\r\n      cada cara representa una de las siguientes acciones: Descargas una caja de\r\n      galletas azules 🍪 Descargas un huevo de rana (con mucho cuidado) 🥚\r\n      Descargas una rana 🐸 Grogu se mueve una casilla 👣 Además habrá una ficha\r\n      que represente dónde está Grogu. Ganarás el juego si consigues descargar\r\n      toda la mercancía. Perderás si Grogu llega a la última casilla (el\r\n      armario).\r\n    </>\r\n  );\r\n};\r\nexport default Rules;\r\n","const Pieces = () => {\r\n  return (\r\n    <>\r\n      ficha de zona de carga (x6) 🔲🔲🔲🔲🔲🔲, ficha de armario (x1)❎, ficha\r\n      de recipiente (x3), cajas de galletas (x3)🍪, ranas (x3)🐸, huevos de rana\r\n      (x3)🥚, dado (x1) y grogu (x1)\r\n    </>\r\n  );\r\n};\r\nexport default Pieces;\r\n","import '../styles/layout/footer.scss';\r\nconst Footer = () => {\r\n  return <footer className='footer'>&copy; Maitane Abad Conde</footer>;\r\n};\r\nexport default Footer;\r\n","import '../styles/App.scss';\n\n// Fichero src/components/App.js\n\nimport { Route, Routes } from 'react-router-dom';\nimport Landing from './Landing';\nimport Game from './Game';\nimport Rules from './Rules';\nimport Pieces from './Pieces';\nimport Footer from './Footer';\n\nconst App = () => {\n  return (\n    <div className='body'>\n      <Routes>\n        <Route path='/' element={<Landing />}></Route>\n        <Route path='/pieces' element={<Pieces />}></Route>\n        <Route path='/game' element={<Game />}></Route>\n        <Route path='/rules' element={<Rules />}></Route>\n      </Routes>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, //Le indicamos que el componente HashRouter es ahora la madre de App. Esto hace que tanto App como todos sus componentes hijas, nietas... puedan trabajar con las rutas.\n  document.getElementById('root') // estamos diciendo que vamos a usar las rutas con Hash.\n);\n\n//Nota: en el futuro cuando tengas acceso a la configuración de tu servidor y puedas usar el sistema moderno de rutas, tienes que cambiar en este fichero la palabra HashRouter por BrowserRouter.\n"],"sourceRoot":""}